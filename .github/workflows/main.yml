name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Check out code
        uses: actions/checkout@v3

      - name: Lint Go Code
        run: |
          go install golang.org/x/lint/golint@latest
          export PATH="$PATH:$HOME/go/bin"
          make lint

  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: gin_gorm_oj
        ports:
          - 3306:3306
        options: --health-cmd "mysqladmin ping -p'password'" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Check out code
        uses: actions/checkout@v3

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h 127.0.0.1 --silent; do
            echo "Waiting for MySQL to be ready..."
            sleep 5
          done

      - name: Run Unit tests
        run: make test-coverage

      - name: Upload Coverage report to CodeCov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt
          fail_ci_if_error: true

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Check out code
        uses: actions/checkout@v3

      - name: Build
        run: make build
